<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Shu@Note]]></title>
  <link href="http://blog.shume.in/atom.xml" rel="self"/>
  <link href="http://blog.shume.in/"/>
  <updated>2013-07-05T18:54:29+08:00</updated>
  <id>http://blog.shume.in/</id>
  <author>
    <name><![CDATA[ciffel]]></name>
    <email><![CDATA[ciffel@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Justpaste - A convenient image uploader]]></title>
    <link href="http://blog.shume.in/2013/04/28/justpaste/"/>
    <updated>2013-04-28T05:28:25+08:00</updated>
    <id>http://blog.shume.in/2013/04/28/justpaste</id>
    <content type="html"><![CDATA[<p>最近在CNA micro conf.跟大家分享我做的<a href="http://justpaste.shume.in/">Justpaste</a>，這是一個讀取剪貼簿內容並自動上傳到imgur的服務，透過複製貼上就可以快速的分享影片截圖。</p>

<ul>
<li>URL: <a href="http://justpaste.shume.in/">http://justpaste.shume.in/</a></li>
<li>Source: <a href="https://github.com/ciffel/justpaste">https://github.com/ciffel/justpaste</a></li>
</ul>


<br />


<script async class="speakerdeck-embed" data-id="f9a5da308fe70130feae1231381d79e1" data-ratio="1.33333333333333" src="http://blog.shume.in//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacOS無法開啟Chrome下載的檔案]]></title>
    <link href="http://blog.shume.in/2013/03/11/cant-open-downloaded-files-from-chrome/"/>
    <updated>2013-03-11T23:10:57+08:00</updated>
    <id>http://blog.shume.in/2013/03/11/cant-open-downloaded-files-from-chrome</id>
    <content type="html"><![CDATA[<p>在MacOS 10.8.2的Google Chrome，下載檔案後，無法從底下的下載列直接點選檔案來開啟，這時候只需要重開一個process就可以了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo killall -KILL appleeventsd</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<p><a href="https://productforums.google.com/forum/?fromgroups=#!topic/chrome/bPlCcZdfc_4">Latest google chrome on Mountion Lion can&rsquo;t open downloaded files from the interface</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ecourse Fix - Google Chrome Extentsion]]></title>
    <link href="http://blog.shume.in/2012/12/12/ecourse_fix_google_chrome/"/>
    <updated>2012-12-12T23:08:11+08:00</updated>
    <id>http://blog.shume.in/2012/12/12/ecourse_fix_google_chrome</id>
    <content type="html"><![CDATA[<h2>說明</h2>

<p>由於中正大學的課程教學系統在Google Chrome上有相容性問題，會導致功能選單與課程教材連結無效，所以才有這個擴充套件的出現。</p>

<h3>修正項目</h3>

<ol>
<li>選單無效修正</li>
<li>標題修正</li>
<li>編碼修正</li>
</ol>


<h2>連結</h2>

<p><a href="https://chrome.google.com/webstore/detail/ecourse-fix/ikmpbfojdbnhnglddfmhilocodiecooe">點此詳細希望</a></p>

<h2>Issues</h2>

<p>若有使用上任何問題，可以透過評論或留言回報</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM install Passenger and_Nginx]]></title>
    <link href="http://blog.shume.in/2012/12/01/rvm_install_passenger_and_nginx/"/>
    <updated>2012-12-01T23:03:56+08:00</updated>
    <id>http://blog.shume.in/2012/12/01/rvm_install_passenger_and_nginx</id>
    <content type="html"><![CDATA[<p>OS: Ubuntu 12.04.1 大致上是參照<a href="http://ruby-china.org/wiki/mac-nginx-passenger-rails">這篇</a>的做法</p>

<p>先用gem安裝Passenger</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install passenger</span></code></pre></td></tr></table></div></figure>


<p>接著可以透過passenger自帶的script，很方便的安裝Nginx，若是有什麼缺少的東西，他也會提示要安裝。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ passenger-install-nginx-module</span></code></pre></td></tr></table></div></figure>


<p>但是過程中，因為nginx並非裝在user的home底下，所以沒有權限會導致安裝失敗，這時候需要用到rvmsudo。</p>

<p>但使用rvmsudo PATH中還是沒有passenger-install-nginx-module（不明原因），所以要手動切換到passenger所在的資料夾</p>

<p>Update:</p>

<p>若出現<code>/usr/bin/env: ruby_noexec_wrapper: No such file or directory</code>，要使用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ source ~/.rvm/environments/ruby-1.9.3-p362
</span><span class='line'>$ cd /home/shuming/.rvm/gems/ruby-1.9.3-p327/bin
</span><span class='line'>$ rvmsudo ./passenger-install-nginx-module</span></code></pre></td></tr></table></div></figure>


<p>最後設個link到nginx，方便使用</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo ln -s /usr/local/nginx/sbin/nginx /usr/sbin/</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mosh usage]]></title>
    <link href="http://blog.shume.in/2012/11/15/mosh-usage/"/>
    <updated>2012-11-15T22:57:07+08:00</updated>
    <id>http://blog.shume.in/2012/11/15/mosh-usage</id>
    <content type="html"><![CDATA[<p>Mosh介紹</p>

<ul>
<li><a href="http://blog.lyhdev.com/2012/05/moshmobile-shell-ssh.html">Mosh（mobile shell）取代 SSH 的遠端終端機連線工具</a></li>
<li><a href="http://blog.gslin.org/archives/2012/10/10/3004/%E6%8A%8A-ssh-%E6%8F%9B%E6%88%90-mosh/">把 SSH 換成 Mosh</a></li>
</ul>


<p>各平台安裝可參照<a href="http://mosh.mit.edu/">官方網站的說明</a></p>

<p>不過在ubuntu 12.10中，安裝完python-software-properties後仍沒辦法執行add-apt-repository，後來安裝software-properties-common就可以了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo add-apt-repository ppa:keithw/mosh
</span><span class='line'>$ sudo apt-get install software-properties-common
</span><span class='line'>$ sudo apt-get update
</span><span class='line'>$ sudo apt-get install mosh</span></code></pre></td></tr></table></div></figure>


<p>使用zsh補完ssh hostname，在.zshrc中設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>compdef mosh=ssh</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Alias]]></title>
    <link href="http://blog.shume.in/2012/09/04/ssh-alias/"/>
    <updated>2012-09-04T22:54:55+08:00</updated>
    <id>http://blog.shume.in/2012/09/04/ssh-alias</id>
    <content type="html"><![CDATA[<p>在terminal底下使用ssh打port,帳號,位置總是令人厭煩</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh -p 3357 shume@machinex.example.com</span></code></pre></td></tr></table></div></figure>


<p>這時候使用SSH alias就可以節省大量時間</p>

<h2>~/.ssh/config</h2>

<p>編輯<code>~/.ssh/config</code>(若是不存在就新增)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>host m1
</span><span class='line'>  hostname machinex.example.com
</span><span class='line'>  user shume
</span><span class='line'>  port 3357</span></code></pre></td></tr></table></div></figure>


<p>(不需要的話，user跟port都可以省略)</p>

<p>設定完config之後，開啟ssh只需要下</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh m1</span></code></pre></td></tr></table></div></figure>


<p>如果搭配public key使用，連密碼都不需要了</p>

<h2>將public key上傳</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat ~/.ssh/id_rsa.pub | ssh m1 'cat &gt;&gt; ~/.ssh/authorized_keys'</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NAT Configuration in VMware Player 5]]></title>
    <link href="http://blog.shume.in/2012/09/04/nat-configuration-in-vmware-player-5/"/>
    <updated>2012-09-04T22:51:44+08:00</updated>
    <id>http://blog.shume.in/2012/09/04/nat-configuration-in-vmware-player-5</id>
    <content type="html"><![CDATA[<h2>Before VMware Player 5</h2>

<p>在Windows中VMware需要NAT Port Forwarding，可以透過VMware內建的程式vmnetcfg來進行設定，但這程式並不在預設安裝的項目裡面，所以在VMware Player的安裝目錄中是找不到的。</p>

<p>我們可以以command line將安裝檔解開</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; VMware-player-3.0.0-197124.exe /e .\extract_folder</span></code></pre></td></tr></table></div></figure>


<p>在extract_folder資料夾中找到network.cab，提取其中的vmnetcfg.exe到VMware Player的資料夾，使用vmnetcfg.exe就可以進行網路相關的設定了。</p>

<h2>VMware Player 5</h2>

<p>新版的VMware Player，在解開安裝檔後會發現，沒有network.cab，vmnetcfg.exe已經不在安裝檔中了。為了取得vmnetcfg，先下載VMware Workstation，解開安裝檔中後，找到core.cab，就可以從中找到vmnetcfg.exe了。</p>

<h2>備註</h2>

<p>我更新5.0.1後發現原來的vmnetcfg.exe無法使用，所以版本更新後需要從Workstation版本中重新解出新的來用。</p>

<h2>Reference</h2>

<p><a href="http://communities.vmware.com/thread/415408">Whither VMware Player 5.0 VMNetCfg.exe?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[編譯Qt程式: Q_OBJECT]]></title>
    <link href="http://blog.shume.in/2012/08/30/compile-qt-program/"/>
    <updated>2012-08-30T22:49:42+08:00</updated>
    <id>http://blog.shume.in/2012/08/30/compile-qt-program</id>
    <content type="html"><![CDATA[<p>當程式裡需要使用signal與slot時，只要參閱官方文件就可以知道我們必須在Class上方加入Q_OBJECT這個macro。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">MainWindow</span> <span class="o">:</span> <span class="k">public</span> <span class="n">QMainWindow</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Q_OBJECT</span>
</span></code></pre></td></tr></table></div></figure>


<h2>常見錯誤</h2>

<p>此時，make會出現</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">undefined</span> <span class="n">reference</span> <span class="n">to</span> <span class="err">`</span><span class="n">vtable</span> <span class="k">for</span> <span class="n">MainWindow</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>原因是加入Q_OBJECT，qmake沒有發現多了這個marco，make時沒有幫我們產生moc檔，此時再執行qmake一次即可</p>

<h2>分離宣告和實作</h2>

<p>當我在撰寫一支小小的測試程式時，我將class的宣告與implementation都寫在test.cpp，依照上面的操作，希望qmake產生moc時卻無法成功。</p>

<p>自行摸索之後的解法是，將.h與.cpp分離，這樣qmake就會發現有macro的存在，就可以成功編譯了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Qt on Mac OSX]]></title>
    <link href="http://blog.shume.in/2012/08/29/install-qt-on-macosx/"/>
    <updated>2012-08-29T22:46:49+08:00</updated>
    <id>http://blog.shume.in/2012/08/29/install-qt-on-macosx</id>
    <content type="html"><![CDATA[<p>需要Qt的開發環境但是又不想使用Qt Creator與其他肥大的夥伴，在Mac上我選擇使用最簡單的homebrew來安裝。</p>

<p>安裝Qt SDK</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install qt</span></code></pre></td></tr></table></div></figure>


<p>新增project資料夾，開始編輯</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir qtdemo
</span><span class='line'>$ cd qtdemo
</span><span class='line'>$ vim hello.cpp</span></code></pre></td></tr></table></div></figure>


<p>編譯時，使用qmake來產生Makefile</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ qmake -project
</span><span class='line'>$ qmake
</span><span class='line'>$ make</span></code></pre></td></tr></table></div></figure>


<p>這樣就快速的編譯完所撰寫的Qt Application了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[刪除Mac OS X下的安裝Package]]></title>
    <link href="http://blog.shume.in/2012/08/14/uninstall-macosx-pkg/"/>
    <updated>2012-08-14T22:44:58+08:00</updated>
    <id>http://blog.shume.in/2012/08/14/uninstall-macosx-pkg</id>
    <content type="html"><![CDATA[<p>在Mac OS X常會見到一種安裝檔.pkg，行為像Windows底下的安裝檔，但是想要移除安裝的內容時，檔案可能散佈在各個資料夾，就不像以.dmg安裝的只要把Applications資料夾中的內容刪除即可。</p>

<p>Google了一下還是有解的</p>

<p>列出所有安裝的packages:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pkgutil --pkgs</span></code></pre></td></tr></table></div></figure>


<p>可以配合grep來找到要移除的package</p>

<p>使用下面的shell script來移除所有檔案</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pkgutil --files <span class="nv">$1</span> | sed -e <span class="s2">&quot;s/^/\//&quot;</span> | sed -n <span class="s1">&#39;1!G;h;$p&#39;</span> | <span class="k">while </span><span class="nb">read </span>line
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">  </span>rm <span class="s2">&quot;$line&quot;</span> 2&gt; /dev/null;
</span><span class='line'>  rmdir <span class="s2">&quot;$line&quot;</span> 2&gt; /dev/null;
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[於Facebook Feed中加入連結]]></title>
    <link href="http://blog.shume.in/2012/07/21/hyperlink-in-fb-feed-dialog/"/>
    <updated>2012-07-21T22:34:17+08:00</updated>
    <id>http://blog.shume.in/2012/07/21/hyperlink-in-fb-feed-dialog</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-PabNCzexjNY/T-L1xE28K2I/AAAAAAAAAnM/j_ghq84k9os/s514/feed-dialog.png" alt="image" /></p>

<p>當想要在Facebook Feed加入連結的時候，會發現description只能是純文字，如果加入HTML TAG就會自動被濾掉，官方文件中沒有寫明如何在description加入連結，稍微Google了一下才找到解法，原來是要用properties！</p>

<h2>properties</h2>

<blockquote><p>A JSON object of key/value pairs which will appear in the stream attachment beneath the description, with each property on its own line. Keys must be strings, and values can be either strings or JSON objects with the keys text and href.</p></blockquote>

<h2>Example</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">FB</span><span class="p">.</span><span class="nx">ui</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;feed&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;凱撒大飯店&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">link</span><span class="o">:</span> <span class="s1">&#39;http://www.caesarpark.com.tw/&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">caption</span><span class="o">:</span> <span class="s1">&#39;Check this hotel&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">description</span><span class="o">:</span> <span class="s1">&#39;The hotel is located in 台灣台北市 and has rating of 3.5.&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">properties</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;Find the Hotel Reviews&#39;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;text&#39;</span><span class="o">:</span> <span class="s1">&#39;here&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;href&#39;</span><span class="o">:</span> <span class="s1">&#39;http://goo.gl/qaIdm&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">},</span> <span class="nx">callback</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ul>
<li><a href="https://developers.facebook.com/docs/reference/dialogs/feed/">Feed Dialog &ndash; Facebook Developer</a></li>
<li><a href="http://fbdevwiki.com/wiki/FB.ui">FB.ui &ndash; FbDevWiki</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
